{"version":3,"sources":["components/Header.jsx","components/Loader.jsx","components/Todo.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","handleCompletedTodo","handleUnCompletedTodo","handleTodo","className","onClick","Loader","Todo","title","status","handleCompleteTodo","id","completedList","console","log","App","useState","todoList","setTodoList","setCompletedList","useEffect","handleTodoList","a","fetch","response","json","result","resultTodoList","slice","map","todo","completed","length","singleTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7c2e189.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n//Estilos\r\nimport \"../style/header.css\"\r\n\r\n\r\nconst Header  =  ({ handleCompletedTodo, handleUnCompletedTodo, handleTodo}) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div >\r\n                <div className=\"header\">\r\n                    <h2>To Do List</h2>\r\n                </div>\r\n                <div className=\"btn__header\">\r\n                    <button \r\n                    className=\"btn__header__todo\"\r\n                    onClick={handleTodo}>Todo</button>\r\n                    <button \r\n                    className=\"btn__header__completed\"\r\n                    onClick={handleCompletedTodo}>Completed</button>\r\n                    <button \r\n                    className=\"btn__header__reseted\"\r\n                    onClick={handleUnCompletedTodo}>Uncompleted</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;","import React from \"react\"\r\n\r\nconst Loader = () => {\r\n    return(\r\n        <p>Cargando...</p>\r\n        )\r\n}\r\n\r\nexport default Loader;","import React from \"react\";\r\n\r\n//Styles\r\nimport \"../style/Todo.css\";\r\n\r\nconst Todo = ({ title, status, handleCompleteTodo, id, completedList }) => {\r\n  console.log(completedList)\r\n  return (\r\n        completedList === \"completed\" ? (\r\n        <div className={`todo-card ${status ? \"oculto\" : \"\"}`}>\r\n        <div className=\"todo-title\">\r\n          <h4>{title}</h4>\r\n        </div>\r\n        <div className=\"todo-actions\">\r\n          <button\r\n            className={status ? \"complete\" : \"reset\"}\r\n            onClick={() => handleCompleteTodo(id)}>\r\n            {status ? \"Reset\" : \"Complete\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n        ) : completedList === \"uncompleted\" ? (\r\n          <div  className={`todo-card ${!status ? \"oculto\" : \"\"}`}>\r\n        <div className=\"todo-title\">\r\n          <h4>{title}</h4>\r\n        </div>\r\n        <div className=\"todo-actions\">\r\n          <button\r\n            className={status ? \"complete\" : \"reset\"}\r\n            onClick={() => handleCompleteTodo(id)}>\r\n            {status ? \"Reset\" : \"Complete\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n        ) : (\r\n      <div  className={`todo-card `}>\r\n        <div className=\"todo-title\">\r\n          <h4>{title}</h4>\r\n        </div>\r\n        <div className=\"todo-actions\">\r\n          <button\r\n            className={status ? \"complete\" : \"reset\"}\r\n            onClick={() => handleCompleteTodo(id)}>\r\n            {status ? \"Reset\" : \"Complete\"}\r\n          </button>\r\n        </div>\r\n      </div>\r\n        )\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React, {useEffect,useState} from \"react\";\n\n\nimport Header from \"./components/Header\";\nimport Loader from \"./components/Loader\";\nimport Todo from \"./components/Todo\"\n\nimport \"./style/App.css\"\n\nconst App = () => {\n\n\n  // STATE\n\n  const [todoList, setTodoList] = useState([]);\n  const [completedList, setCompletedList] = useState(null)\n\n  // EFFECT\n\n  useEffect(() => {\n\n    const handleTodoList = async () => {\n      const response = await fetch(\n        \"https://jsonplaceholder.typicode.com/todos\"\n      );\n      const result = await response.json();\n      const resultTodoList = result.slice(0, 20);\n      setTodoList(resultTodoList);\n    };\n    handleTodoList();\n  }, []);\n\n\n\n  // FUNCIONES\n  const handleCompleteTodo = id => {\n    setTodoList(\n      todoList.map(todo =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  const handleCompletedTodo =  ()  => {\n    setCompletedList (\"completed\")\n  }\n\n  const handleUnCompletedTodo = id => {\n    setCompletedList (\"uncompleted\")\n  }\n\n  const handleTodo = () => {\n    setCompletedList (null)\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Header\n      handleCompletedTodo={handleCompletedTodo}\n      handleUnCompletedTodo={handleUnCompletedTodo}\n      handleTodo={handleTodo}\n      />\n\n      <div className=\"todo-container\">\n        {todoList && todoList.length > 0 ? (\n          todoList.map(singleTodo => (\n            <Todo\n              key={singleTodo.id}\n              title={singleTodo.title}\n              status={singleTodo.completed}\n              handleCompleteTodo={handleCompleteTodo}\n              id={singleTodo.id}\n              completedList={completedList}\n            />\n          ))\n        ) : (\n          <Loader />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}